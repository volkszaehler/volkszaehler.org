language: php

php:
    - 5.6
    - 7.0
    - 7.1

services:
    - mysql
    - postgresql

# http://docs.travis-ci.com/user/migrating-from-legacy/
sudo: false

env:
  # run composer by default
  global:
    - DEPENDENCIES=standard
    - TRAVIS_TEST_EXCLUDES="--exclude-group slow,jpgraph,pushserver"
  matrix:
    - DB=mysql
    - DB=pgsql
    - DB=sqlite

matrix:
  include:
    # httpd-based
    - php: 5.6
      env: DB=mysql TEST_COMPONENT=HTTPD
    # push-server
    - php: 5.6
      env: DB=mysql TEST_COMPONENT=PUSH_SERVER
    # from..to
    - php: 5.6
      env: DB=mysql DEPENDENCIES=lowest
    # jslint-only
    - php: 5.6
      env: DB= DEPENDENCIES= JSLINT=true

notifications:
    mail: "volkszaehler-dev@lists.volkszaehler.org"
    irc: "chat.freenode.net#volkszaehler.org"

# speedup build
cache:
  directories:
    - $COMPOSER_CACHE_DIR
    - $HOME/.composer/cache
    - node_modules

before_install:
    # disable xdebug for composer performance
    - if [ -e /home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then rm /home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini; fi

install:
    - if [ "$JSLINT" = true ]; then npm install -g gulp; npm install; fi
    - if [ "$JSLINT" = true ]; then export DB=; export DEPENDENCIES=; export TEST_COMPONENT=; fi
    - if [ "$DEPENDENCIES" = "standard" ]; then composer install; fi
    - if [ "$DEPENDENCIES" = "lowest" ]; then composer update --prefer-lowest -n; fi
    - if [ "$DEPENDENCIES" = "highest" ]; then composer update -n; fi
    - if [ "$TEST_COMPONENT" = "HTTPD" ]; then composer require php-pm/php-pm:dev-master php-pm/httpkernel-adapter:dev-master; fi

    # add apc cache
    - |
      if [ "$JSLINT" != true ]; then
        phpenv config-add ./test/bin/apc.ini && pecl install apcu
        php -r 'echo(function_exists("apcu_store")?"APCu enabled":"APCu disabled");'
      fi

before_script:
    # enable shell errors
    - set -e
    - cp etc/volkszaehler.conf.template.php etc/volkszaehler.conf.php

    - DATABASE=volkszaehler
    - USER=root
    - PASSWORD=
    - if [ "$DB" = "pgsql" ]; then USER=postgres; fi

    # create config file
    - sed -i "s/'pdo_mysql'/'pdo_$DB'/" etc/volkszaehler.conf.php
    - sed -i "s/'vz'/'$USER'/" etc/volkszaehler.conf.php
    - sed -i "s/'demo'/'$PASSWORD'/" etc/volkszaehler.conf.php
    - sed -i "s/'volkszaehler'/'$DATABASE'/" etc/volkszaehler.conf.php
    - if [ "$DB" = "sqlite" ]; then sed -i "s/\?>/\$config['db']['path']\ =\ VZ_DIR.'\/sqlite.db3'\;\n?>/" etc/volkszaehler.conf.php; fi
    - cat etc/volkszaehler.conf.php

    # create database
    - if [ "$DB" = "mysql" ]; then mysql -e "CREATE DATABASE $DATABASE;" -u $USER; fi
    - if [ "$DB" = "pgsql" ]; then psql -c "CREATE DATABASE $DATABASE;" -U $USER; fi

    # create schema
    - if [ -n "$DB" ]; then php misc/tools/doctrine orm:schema-tool:create; fi

    # setup local middleware
    - |
      if [ "$TEST_COMPONENT" = "HTTPD" ]; then
        sed -i "s/testAdapter\" value=\".*\"/testAdapter\" value=\"HTTP\"/" phpunit.xml
        vendor/bin/ppm start -c etc/middleware.json &
        HTTPD_PID=$!
        echo "Started httpd with pid $HTTPD_PID"
      fi

    # push server tests
    - if [ "$TEST_COMPONENT" = "PUSH_SERVER" ]; then sed -i "s/\?>/\$config['push']['enabled']\ =\ true\;\n?>/" etc/volkszaehler.conf.php; fi
    - if [ "$TEST_COMPONENT" = "PUSH_SERVER" ]; then
        php misc/tools/push-server.php &
      fi

after_script:
    - if [ "$TEST_COMPONENT" = "HTTPD" ]; then kill -9 $HTTPD_PID; fi

script:
    # run core tests
    - if [ -n "$DB" ]; then vendor/bin/phpunit $TRAVIS_TEST_EXCLUDES,aggregation; fi

    # run aggregation tests (mysql only)
    - if [ "$DB" = "mysql" ]; then sed -i "s/\?>/\$config['aggregation']\ =\ true;\n?>/" etc/volkszaehler.conf.php; fi
    - |
      if [ "$DB" = "mysql" -a "$TEST_COMPONENT" = "HTTPD" ]; then
        kill -9 $HTTPD_PID
        sleep 10
        vendor/bin/ppm start -c etc/middleware.json &
        HTTPD_PID=$!
        echo "Started httpd with pid $HTTPD_PID"
      fi
    - if [ "$DB" = "mysql" ]; then vendor/bin/phpunit $TRAVIS_TEST_EXCLUDES; fi

    # run aggregation tool itself (mysql only)
    - if [ "$DB" = "mysql" ]; then php misc/tools/aggregate.php run -m delta -l hour; fi

    # push server tests
    - if [ "$TEST_COMPONENT" = "PUSH_SERVER" ]; then vendor/bin/phpunit --group pushserver; fi

    # jslint javascript sources
    - if [ "$JSLINT" = true ]; then gulp jshint; fi
