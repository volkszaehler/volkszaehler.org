language: php

# whitelist
branches: 
    only: 
       - master-travis
       - travis

php:
    - "5.5"
#    - "5.4"
#    - "5.3"

services:
    - mysql
    - postgresql

env:
    - DB=mysql
    - DB=pgsql
    - DB=sqlite

notifications:
# mail: "volkszaehler-dev@lists.volkszaehler.org"
# irc: "chat.freenode.net#volkszaehler.org"

before_install:
#    - composer self-update

install:
#    - composer install
    - mkdir doctrine
    - wget -O - http://www.doctrine-project.org/downloads/DoctrineORM-2.2.0-full.tar.gz | tar xz -C doctrine
    - mkdir lib/vendor/Doctrine
    - cp -r doctrine/Doctrine*/Doctrine/* lib/vendor/Doctrine/

before_script:
    - cp etc/volkszaehler.conf.template.php etc/volkszaehler.conf.php

    - DATABASE=travis
    - USER=travis
    - PASSWORD=
    - echo $USER

    # fix username before default rules apply
    - sh -c "if [ '$DB' = 'pgsql' ]; then sed -i 's/'\''vz'\''/'\''postgres'\''/' etc/volkszaehler.conf.php; fi;"

    - sed -i "s/'pdo_mysql'/'pdo_$DB'/" etc/volkszaehler.conf.php
    - sed -i "s/'vz'/'$USER'/" etc/volkszaehler.conf.php
    - sed -i "s/'demo'/'$PASSWORD'/" etc/volkszaehler.conf.php
    - sed -i "s/'volkszaehler'/'$DATABASE'/" etc/volkszaehler.conf.php

    - cat etc/volkszaehler.conf.php

    - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'create database $DATABASE;' -u $USER; fi;"
    - sh -c "if [ '$DB' = 'pgsql' ]; then psql -c 'create database $DATABASE;' -U postgres; fi;"
    - sh -c "if [ '$DB' = 'sqlite' ]; then sed -i 's/\?>/\$config['\''db'\'']['\''path'\'']\ =\ VZ_DIR.'\''\/sqlite.db3'\''\n?>/' etc/volkszaehler.conf.php; fi;"

    - cat etc/volkszaehler.conf.php

    - php misc/tools/doctrine orm:schema-tool:create --dump-sql > misc/sql/schema.sql
    - sed -i 's/ATTENTION/-- /' misc/sql/schema.sql
    - echo ';' >> misc/sql/schema.sql

    - cat misc/sql/schema.sql

    - sh -c "if [ '$DB' = 'mysql' ]; then cat misc/sql/schema.sql | mysql -u $USER $DATABASE; fi;"
    - sh -c "if [ '$DB' = 'pgsql' ]; then cat misc/sql/schema.sql | psql -U postgres $DATABASE; fi;"
    - sh -c "if [ '$DB' = 'sqlite' ]; then cat misc/sql/schema.sql | sqlite3 sqlite.db3; fi;"
    - sh -c "if [ '$DB' = 'sqlite' ]; then sqlite3 sqlite.db3 .dump; fi;"

script: 
    - cd test
    - phpunit --configuration phpunit.xml --coverage-text
